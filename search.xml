<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>blog部署</title>
    <url>/2022/10/05/blog%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<p>第一次自己建博客，操作不够熟练，此贴记录踩坑历程和常用操作。</p>
<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g </span><br><span class="line"><span class="comment">#hexo generate的简写</span></span><br><span class="line"><span class="comment">#生成静态文件</span></span><br></pre></td></tr></table></figure>

<h3 id="本地部署"><a href="#本地部署" class="headerlink" title="本地部署"></a>本地部署</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo s</span><br><span class="line"><span class="comment">#hexo server的简写</span></span><br><span class="line"><span class="comment">#默认使用4000端口</span></span><br></pre></td></tr></table></figure>

<h3 id="清除缓存"><a href="#清除缓存" class="headerlink" title="清除缓存"></a>清除缓存</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line"><span class="comment">#防止更新没更新上</span></span><br></pre></td></tr></table></figure>

<h3 id="远程部署"><a href="#远程部署" class="headerlink" title="远程部署"></a>远程部署</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo d</span><br><span class="line"><span class="comment">#hexo deploy的简写</span></span><br><span class="line"><span class="comment">#部署到github</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>需要<code>hexo g</code>先生成静态文件</p>
</blockquote>
<h3 id="新建"><a href="#新建" class="headerlink" title="新建"></a>新建</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">&quot;xxx&quot;</span></span><br><span class="line"><span class="comment">#使用typora编辑文章</span></span><br></pre></td></tr></table></figure>

<h3 id="草稿"><a href="#草稿" class="headerlink" title="草稿"></a>草稿</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new draft &quot;xxx&quot;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>需要使用<code>hexo new publish &quot;xxx&quot;</code>使其发布成功</p>
</blockquote>
<h2 id="图片配置"><a href="#图片配置" class="headerlink" title="图片配置"></a>图片配置</h2><h3 id="本地方式"><a href="#本地方式" class="headerlink" title="本地方式"></a>本地方式</h3><p>本来以为直接使用本地图片就可以上传到博客上，甚至配置了<code>hexo-asset-image</code>。</p>
<p>然而，生成一个<code>md</code>文件就要生成一个相应文件夹实在离谱，文章一多岂不是都是文件夹？而且，<code>--- ---</code>中间如果要配置<code>cover</code>或<code>top_img</code>无法使用<code>markdown</code>，只能用<code>https</code>方式，那么本地链接也无法使用了。</p>
<p>唯一的方法便是使用图床功能，可以使用<code>gitee</code>或者<code>阿里云OSS</code>。</p>
<p><code>gitee</code>曾经崩过一次，而且注册需要身份证和手持身份证照片，担心隐私安全问题，暂时放弃。</p>
<h3 id="阿里云OSS"><a href="#阿里云OSS" class="headerlink" title="阿里云OSS"></a>阿里云OSS</h3><p>阿里云对象存储<code>OSS（Object Storage Service）</code>比较适合存储静态资源，缺点是需要一些小钱，配置比<code>gitee</code>麻烦不少，但是一劳永逸。</p>
<h4 id="设置OSS"><a href="#设置OSS" class="headerlink" title="设置OSS"></a>设置OSS</h4><p>鉴于blog不需要太多的存储空间，本次就买了最低级的OSS，只需要27块，就能有三年的服务器权限。</p>
<p><img src="https://cosh-blog.oss-cn-beijing.aliyuncs.com/blog/%E9%98%BF%E9%87%8C%E4%BA%91OSS%E8%B4%AD%E4%B9%B0.png"></p>
<p><code>bucket</code>在我看来相当于一个命名空间，使用存储服务时需要我们指定分区进行存储。这个id是全网唯一的，不能和别人重复。</p>
<p><img src="https://cosh-blog.oss-cn-beijing.aliyuncs.com/blog/%E6%96%B0%E5%BB%BAbucket.png"></p>
<h4 id="PicGo图床上传服务"><a href="#PicGo图床上传服务" class="headerlink" title="PicGo图床上传服务"></a>PicGo图床上传服务</h4><p>每次传输到云端太麻烦了，直接使用PicGo简化流程，只需要完善好配置。</p>
<p><img src="https://cosh-blog.oss-cn-beijing.aliyuncs.com/blog/PicGo%E5%9B%BE%E5%BA%8A%E8%AE%BE%E7%BD%AE.png"></p>
<ol>
<li><code>keyId</code>和<code>KeySecret</code>在个人的<code>AccessKey</code>管理中直接生成就可以，他推荐我用子账号比较安全，我没管。</li>
<li><code>Bucket</code>就是OSS中设置的空间名</li>
<li>存储区域就是路径拉~</li>
</ol>
<h4 id="Typora配置"><a href="#Typora配置" class="headerlink" title="Typora配置"></a>Typora配置</h4><p>前两项配置使得我们能够从<code>PicGo</code>上传图片，然后获取链接，写入<code>Typora</code>。将<code>Typora</code>配置好可以直接在使用<code>MarkDown</code>写作时直接上传本地图片。</p>
<p>完成<code>Typora</code>上传服务的配置就可以了。</p>
<p><img src="https://cosh-blog.oss-cn-beijing.aliyuncs.com/blog/typora%E8%AE%BE%E7%BD%AEpicGo.png"></p>
<p><strong>自此，博客的图片可以不使用本地功能，全部来自网络。</strong></p>
<h2 id="音乐配置"><a href="#音乐配置" class="headerlink" title="音乐配置"></a>音乐配置</h2><h3 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h3><p>首先下载hexo-tag-aplayer插件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-tag-aplayer</span><br><span class="line"><span class="comment">#比播放器外链更稳定，配置好很香</span></span><br></pre></td></tr></table></figure>

<h3 id="配置修改"><a href="#配置修改" class="headerlink" title="配置修改"></a>配置修改</h3><p>全局修改，防止插入重复资源</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">aplayer:</span></span><br><span class="line">  <span class="attr">meting:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">asset_inject:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>这部分hexo配置没有，需要主动写入</p>
</blockquote>
<p>主题部分修改</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Inject the css and script (aplayer/meting)</span></span><br><span class="line"><span class="attr">aplayerInject:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="插入底部音乐"><a href="#插入底部音乐" class="headerlink" title="插入底部音乐"></a>插入底部音乐</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;div</span> <span class="string">class=&quot;aplayer</span> <span class="literal">no</span><span class="string">-destroy&quot;</span> <span class="string">data-id=&quot;60198&quot;</span> <span class="string">data-server=&quot;netease&quot;</span> <span class="string">data-type=&quot;playlist&quot;</span> <span class="string">data-fixed=&quot;true&quot;</span> <span class="string">data-autoplay=&quot;true&quot;&gt;</span> <span class="string">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><code>server</code>设置为网易云音乐</li>
<li><code>data-id</code>可通过歌单分享链接获得</li>
</ul>
<blockquote>
<p>如果想要切换页面，音乐不中断，<code>pjax</code>设为<code>true</code></p>
</blockquote>
<h2 id="评论区配置"><a href="#评论区配置" class="headerlink" title="评论区配置"></a>评论区配置</h2><h3 id="LearnCloud注册"><a href="#LearnCloud注册" class="headerlink" title="LearnCloud注册"></a>LearnCloud注册</h3><p><code>butterfly</code>支持使用多种评论插件，我选择了<code>valine</code>。使用<code>valine</code>需要将评论数据上传到<code>LearnCloud</code>。那就注册一个吧。</p>
<p><img src="https://cosh-blog.oss-cn-beijing.aliyuncs.com/blog/LearnCloud%E5%88%9B%E5%BB%BA.png"></p>
<h3 id="修改主题配置文件"><a href="#修改主题配置文件" class="headerlink" title="修改主题配置文件"></a>修改主题配置文件</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">appId:</span> <span class="comment"># leancloud application app id</span></span><br><span class="line">  <span class="attr">appKey:</span> <span class="comment"># leancloud application app key</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">monsterid</span> <span class="comment"># gravatar style https://valine.js.org/#/avatar</span></span><br><span class="line">  <span class="attr">serverURLs:</span> <span class="comment"># This configuration is suitable for domestic custom domain name users, overseas version will be automatically detected (no need to manually fill in)</span></span><br><span class="line">  <span class="attr">bg:</span> <span class="comment"># valine background</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">option:</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p><code>appId</code>与<code>appKey</code>为<code>LearnCloud</code>生成的，需要写入配置文件</p>
</blockquote>
<p>这是全局生成的配置，如果需要对单独的博客内容关闭该功能，只需要在<code>page_head</code>中修改：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure>



<h3 id="结果展示"><a href="#结果展示" class="headerlink" title="结果展示"></a>结果展示</h3><p>自己加了两个评论，假装有人评论过吧。</p>
<p><img src="https://cosh-blog.oss-cn-beijing.aliyuncs.com/blog/%E8%AF%84%E8%AE%BA%E5%8C%BA%E7%95%8C%E9%9D%A2.png"></p>
<p>数据库界面如下：</p>
<p><img src="https://cosh-blog.oss-cn-beijing.aliyuncs.com/blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%95%8C%E9%9D%A2.png"></p>
]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>java语法技巧</title>
    <url>/2022/10/11/java%E8%AF%AD%E6%B3%95%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<h2 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h2><h3 id="集合转数组"><a href="#集合转数组" class="headerlink" title="集合转数组"></a>集合转数组</h3><p>二维int数组</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">list.toArray(<span class="keyword">new</span> <span class="title class_">int</span>[list.size()][]);</span><br></pre></td></tr></table></figure>

<p>一维int数组</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//toArray()不能用基础类型</span></span><br><span class="line"><span class="comment">//1、一个一个放(不推荐)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    List&lt;Integer&gt; list = Arrays.asList(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>);</span><br><span class="line">    <span class="type">int</span>[] res = <span class="keyword">new</span> <span class="title class_">int</span>[list.size()];</span><br><span class="line">    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (Integer num : list) &#123;</span><br><span class="line">        res[i++] = num;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(Arrays.toString(res));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2、JAVA8的stream</span></span><br><span class="line"><span class="type">int</span>[] res = list.stream().mapToInt(Integer::intValue).toArray();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//3、toArray()转成Integer[]再转int[]</span></span><br><span class="line">Integer[] integers = list.toArray(<span class="keyword">new</span> <span class="title class_">Integer</span>[list.size()]);</span><br><span class="line">        <span class="type">int</span>[] res = Arrays.stream(integers).mapToInt(Integer::valueOf).toArray();</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>数位dp</title>
    <url>/2022/10/18/%E6%95%B0%E4%BD%8Ddp/</url>
    <content><![CDATA[<h2 id="数位dp"><a href="#数位dp" class="headerlink" title="数位dp"></a>数位dp</h2><h3 id="902-最大为N的数字组合"><a href="#902-最大为N的数字组合" class="headerlink" title="902.最大为N的数字组合"></a>902.最大为N的数字组合</h3><p>网页链接</p>
<p><a href="https://leetcode.cn/problems/numbers-at-most-n-given-digit-set/">原题链接</a></p>
<p><code>isNum</code>前一位是否是数组（避免有前导0的情况）</p>
<p><code>isLimit</code>此次遍历是否有限制，决定下一位数字的上限以及<code>dp</code>的记录</p>
<p><code>dp</code>无限制的数位值直接加入答案，不需要重新递归</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String digits[];</span><br><span class="line">    <span class="keyword">public</span> <span class="type">char</span>[] c;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> dp[];</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">atMostNGivenDigitSet</span><span class="params">(String[] digits, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.digits = digits;</span><br><span class="line">        c = String.valueOf(n).toCharArray();</span><br><span class="line">        dp = <span class="keyword">new</span> <span class="title class_">int</span>[c.length];</span><br><span class="line">        Arrays.fill(dp,-<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> dfs(<span class="number">0</span>,<span class="literal">true</span>,<span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">dfs</span><span class="params">(<span class="type">int</span> i,<span class="type">boolean</span> isLimit,<span class="type">boolean</span> isNum)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(i == c.length) <span class="keyword">return</span> isNum ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(!isLimit &amp;&amp; isNum &amp;&amp; dp[i] &gt;= <span class="number">0</span>) <span class="keyword">return</span> dp[i];</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(!isNum)&#123;</span><br><span class="line">            res += dfs(i + <span class="number">1</span>,<span class="literal">false</span>,<span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">char</span> <span class="variable">up</span> <span class="operator">=</span> isLimit ? c[i] : <span class="string">&#x27;9&#x27;</span>;</span><br><span class="line">        <span class="keyword">for</span>(String s : digits)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s.charAt(<span class="number">0</span>) &gt; up) <span class="keyword">break</span>;</span><br><span class="line">            res += dfs(i + <span class="number">1</span>,isLimit &amp;&amp; s.charAt(<span class="number">0</span>) == up,<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!isLimit &amp;&amp; isNum) dp[i] = res;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="233-数字1的个数"><a href="#233-数字1的个数" class="headerlink" title="233.数字1的个数"></a>233.数字1的个数</h3><p><a href="https://leetcode.cn/problems/number-of-digit-one/">原题链接</a></p>
<p><code>isNum</code>是否为数组</p>
<p><code>cnt1</code>计算前缀1的个数，传到下一次递归。是比前一题多出来的参数，因为前一题到最后才能知道是否符合，而本题从第一位有1开始就要计算个数。</p>
<p><code>dp[i][cnt1]</code>在前缀1个数为<code>cnt1</code>的情况下，第<code>i</code>个数记录的res，记忆化搜索。</p>
<p><code>isNum</code>可以写也可以不写，因为前缀与结果没有影响</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="type">char</span> c[];</span><br><span class="line">    <span class="type">int</span> dp[][];</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">countDigitOne</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">        c = String.valueOf(n).toCharArray();</span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> c.length;</span><br><span class="line">        dp = <span class="keyword">new</span> <span class="title class_">int</span>[m][m];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i &lt; m;i++)&#123;</span><br><span class="line">            Arrays.fill(dp[i],-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dfs(<span class="number">0</span>,<span class="literal">true</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">dfs</span><span class="params">(<span class="type">int</span> i,<span class="type">boolean</span> isLimit,<span class="type">int</span> cnt1)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(i == c.length) <span class="keyword">return</span> cnt1;</span><br><span class="line">        <span class="keyword">if</span>(!isLimit &amp;&amp; dp[i][cnt1] &gt;= <span class="number">0</span>) <span class="keyword">return</span> dp[i][cnt1];</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">char</span> <span class="variable">up</span> <span class="operator">=</span> isLimit ? c[i] : <span class="string">&#x27;9&#x27;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">char</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&#x27;0&#x27;</span>;s &lt;= up;s++)&#123;</span><br><span class="line">            res += dfs(i + <span class="number">1</span>,isLimit &amp;&amp; s == up,cnt1 + (s == <span class="string">&#x27;1&#x27;</span> ? <span class="number">1</span> : <span class="number">0</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!isLimit) dp[i][cnt1] = res;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="面试题17-06-2出现的次数"><a href="#面试题17-06-2出现的次数" class="headerlink" title="面试题17.06 2出现的次数"></a>面试题17.06 2出现的次数</h3><p><a href="https://leetcode.cn/problems/number-of-2s-in-range-lcci/">原题链接</a></p>
<p>同223题</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="type">int</span> dp[][];</span><br><span class="line">    <span class="type">char</span> c[];</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">numberOf2sInRange</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">        c = String.valueOf(n).toCharArray();</span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> c.length;</span><br><span class="line">        dp = <span class="keyword">new</span> <span class="title class_">int</span>[m][m];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i &lt; m;i++)&#123;</span><br><span class="line">            Arrays.fill(dp[i],-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dfs(<span class="number">0</span>,<span class="literal">true</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">dfs</span><span class="params">(<span class="type">int</span> cnt1,<span class="type">boolean</span> isLimit,<span class="type">int</span> i)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(i == c.length) <span class="keyword">return</span> cnt1;</span><br><span class="line">        <span class="keyword">if</span>(!isLimit &amp;&amp; dp[i][cnt1] &gt;= <span class="number">0</span>) <span class="keyword">return</span> dp[i][cnt1];</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">char</span> <span class="variable">up</span> <span class="operator">=</span> isLimit ? c[i] : <span class="string">&#x27;9&#x27;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">char</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&#x27;0&#x27;</span>;s &lt;= up;s++)&#123;</span><br><span class="line">            res += dfs(cnt1 + (s == <span class="string">&#x27;2&#x27;</span> ? <span class="number">1</span> : <span class="number">0</span>),isLimit &amp;&amp; s == up,i + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!isLimit) dp[i][cnt1] = res;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
</search>
